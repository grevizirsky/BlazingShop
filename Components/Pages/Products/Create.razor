@page "/products/create"
@using BlazingShop.Data
@using BlazingShop.Models
@using Microsoft.EntityFrameworkCore
@inject AppDbContext _context

<h1>New Product</h1>

<EditForm Model=_model OnValidSubmit="@HandleSubmitAsync" FormName="CreateProductForm">
    
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="Title" class="form-label">Title</label>
        <InputText class="form-control" type="text" id="Title" @bind-Value="_model.Title"/>
    </div>

    <div class="mb-3">
        <label for="Price" class="form-label">Price</label>
        <InputNumber class="form-control" type="number" id="Price" @bind-Value="_model.Price"/>
    </div>

    <div class="mb-3">
        <label for="CategoryId" class="form-label">Category</label>
        <InputSelect id="CategoryId" class="form-control" @bind-Value="_model.CategoryId">
            @foreach (var category in _categories)
            {
                <option value="@category.Id">
                    @category.Title
                </option>
            }
        </InputSelect>
    </div>
    
    @if (!string.IsNullOrEmpty(_errorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @_errorMessage
        </div>
    }

    <button class="btn btn-success" type="submit">SAVE</button>

</EditForm>

@code
{
    private Product _model = new();
    private List<Category> _categories = new();
    String? _errorMessage = null;

    protected override async Task OnInitializedAsync()
    {
        _categories = await _context
            .Categories
            .AsNoTracking()
            .OrderBy(x => x.Title)
            .ToListAsync();
        _model.CategoryId = _categories[0].Id;
    }

    async Task HandleSubmitAsync()
    {
        _errorMessage = "Falha ao persisir os dados";
    }
}

